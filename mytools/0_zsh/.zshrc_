### ------------------ ###
### --- ZSH CONFIG --- ###
### ------------------ ###
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
### --- POWER LEVEL CONFIG --- ###
### Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
### Initialization code that may require console input (password prompts, [y/n]
### confirmations, etc.) must go above this block; everything else may go below.
typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet
typeset -g POWERLEVEL9K_INSTANT_PROMPT=off
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
### Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"
### To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
### Set name of the theme to load --- if set to "random", it will
### load a random theme each time Oh My Zsh is loaded, in which case,
### to know which specific one was loaded, run: echo $RANDOM_THEME
### See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"
### Which plugins would you like to load?
### Standard plugins can be found in $ZSH/plugins/
### Custom plugins may be added to $ZSH_CUSTOM/plugins/
### Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git)
source $ZSH/oh-my-zsh.sh

### # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
### --- CUSTOM FUNCTIONS AND ALIAS --- #
### Custom Shell functions
source /home/diego/Documents/Git/mylibs/mytools/0_zsh/my_functions.zsh

### Alias
alias gcl='git clone'
alias push='git add . && git commit -m "update" && git push'
alias norm="norminette -R CheckForbiddenSourceHeader CheckDefine"
alias francinette=/home/diego/francinette/tester.sh
alias paco=/home/diego/francinette/tester.sh

### # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
### --- STARTUP SERVICES --- #
### RCLONE
### Check if the Gdrive is mounted by looking for it in the mount outpu. '-q' is silent no output.
if ! mount | grep -q "/home/diego/Documents/Gdrive"; then
	bash /home/diego/Documents/Git/mylib/mytools/0_unix/rclone_mount.sh
fi














### # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
### --- THEMES PLUGIN --- #
### STARTER SCREEN
### Clear
clear
clear
### Function to fetch and format system info
function get_system_info {
  local os_name=$(uname -s)
  local kernel_version=$(uname -r)
  local hostname=$(hostname)
  local uptime=$(uptime | awk '{print $3, $4}' | sed 's/,//')
  local cpu_model=$(lscpu | grep "Model name:" | awk '{print $3,$4,$5,$6,$7,$8}')
  local memory_usage=$(free -h | awk '/Mem:/ {printf "%.1f GB / %.1f GB", $3/1024/1024, $2/1024/1024}')

  echo -e "\n1.System Information:"
  echo -e "------------------"
  echo -e "OS:\t\t$os_name"
  echo -e "Kernel:\t\t$kernel_version"
  echo -e "Hostname:\t$hostname"
  echo -e "Uptime:\t\t$uptime"
  echo -e "CPU:\t\t$cpu_model"
  echo -e "Memory:\t\t$memory_usage"
}

### Function to fetch and format network info
function get_network_info {
  local ip_address=$(ip addr show eth0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)  # Adjust 'eth0' if needed
  local gateway=$(ip route | grep default | awk '{print $3}')

  echo -e "\n2.Network Information:"
  echo -e "-------------------"
  echo -e "IP Address:\t$ip_address"
  echo -e "Gateway:\t$gateway"
}

### Function to fetch and format disk usage
function get_disk_usage {
  local disk_usage=$(df -h / | awk 'NR==2 {printf "%s / %s (%.1f%%)", $3, $2, $5}')

  echo -e "\n3.Disk Usage:"
  echo -e "-----------"
  echo -e "Root:\t\t$disk_usage"
}

### --- Main screen output ---

### Header
echo -e "\e[1;34mWelcome to your shell, $(whoami)!\e[0m"  # Blue color
date +"%A, %B %d, %Y - %I:%M %p"

### System, Network, and Disk Info
get_system_info
get_network_info
get_disk_usage

### Optional: Add more sections for other data (e.g., weather, calendar, news)
echo -e "\n4.Rclone - Mounted Drives"
echo -e "-----------------------"
mount | grep Gdrive

### Footer
echo -e "\n\e[32mHave a productive day!\e[0m"  # Green color

### ... (header and other sections) ...

### ART
echo_with_art() {
  ### Print the ASCII art
  cat << 'EOF'

           _               _
       _  /\ \           /\ \
      /\_\\ \ \         /  \ \
     / / / \ \ \       / /\ \ \
    / / /   \ \ \      \/_/\ \ \
    \ \ \____\ \ \         / / /
     \ \________\ \       / / /
      \/________/\ \     / / /  _
                \ \ \   / / /_/\_\
                 \ \_\ / /_____/ /
                  \/_/ \________/


EOF

  ### Print the arguments passed to the function
  echo "$@"
}

### Call the function
echo_with_art
